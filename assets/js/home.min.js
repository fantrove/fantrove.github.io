// main.js - ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà (‡πÉ‡∏ä‡πâ typeId/ID ‡πÄ‡∏™‡∏°‡∏≠)

console.log("üöÄ ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå home.min.js ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô");

const viewAllConfigs = {
  emoji: {
    url: "/datum_verse/?type=emojis__&page=1",
    labels: { th: "‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", en: "View All" }
  },
  "special-characters": {
    url: "/datum_verse/?type=special-characters__&page=1",
    labels: { th: "‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", en: "View All" }
  },
  symbols: {
    url: "/datum_verse/?type=symbols__&page=1",
    labels: { th: "‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", en: "View All" }
  },
  // ‡πÄ‡∏û‡∏¥‡πà‡∏° typeId ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
};

function pickLang(obj, langList) {
  if (typeof obj !== 'object' || obj === null) return obj;
  for (const lang of langList) {
    if (obj[lang]) return obj[lang];
  }
  const keys = Object.keys(obj);
  return keys.length > 0 ? obj[keys[0]] : '';
}

function getViewAllLabel(typeId) {
  const lang = localStorage.getItem('selectedLang') || 'en';
  return viewAllConfigs[typeId]?.labels?.[lang] || viewAllConfigs[typeId]?.labels?.en || "View All";
}

function getViewAllUrl(typeId) {
  return viewAllConfigs[typeId]?.url || "#";
}

function getLoadDataErrorMessage(error) {
  const lang = localStorage.getItem('selectedLang') || 'en';
  const messages = {
    th: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏•‡∏ï‡πÑ‡∏î‡πâ",
    en: "Error: Unable to load data or templates",
  };
  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á error ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏î‡∏µ‡∏ö‡∏±‡∏Å
  return `${messages[lang] || messages.en}<br><small style="color: #ff8a8a;">${error}</small>`;
}

async function copyToClipboard(content) {
  try {
    await navigator.clipboard.writeText(content);
    return true;
  } catch (e) {
    return false;
  }
}

// --- ‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• (‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î) ---

async function initializeHomepage() {
  const app = document.getElementById('app');
  const jsonPath = '/assets/json/api-database.min.json';
  const templatePath = '/assets/template-html/home-templates.html';
  
  try {
    console.log("1. ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏•‡∏ï...");
    
    const [dataResponse, templateResponse] = await Promise.all([
      fetch(jsonPath),
      fetch(templatePath)
    ]);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡πÑ‡∏ü‡∏•‡πå JSON
    if (!dataResponse.ok) {
      throw new Error(`‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå JSON ‡πÑ‡∏î‡πâ (Status: ${dataResponse.status}) ‡∏à‡∏≤‡∏Å: ${jsonPath}`);
    }
    console.log("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• JSON ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏•‡∏ï
    if (!templateResponse.ok) {
      throw new Error(`‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏•‡∏ï‡πÑ‡∏î‡πâ (Status: ${templateResponse.status}) ‡∏à‡∏≤‡∏Å: ${templatePath}`);
    }
    console.log("‚úÖ ‡∏î‡∏∂‡∏á‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏•‡∏ï HTML ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    
    const data = await dataResponse.json();
    const templateHTML = await templateResponse.text();
    
    console.log("2. ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏•‡∏ï‡πÄ‡∏õ‡πá‡∏ô HTML...");
    const parser = new DOMParser();
    const templateDoc = parser.parseFromString(templateHTML, 'text/html');
    console.log("‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏•‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    
    console.log("3. ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ID ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏•‡∏ï...");
    const mainTemplate = templateDoc.getElementById('home-main-template');
    const categoryTemplate = templateDoc.getElementById('home-category-template');
    const cardTemplate = templateDoc.getElementById('home-item-card-template');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏´‡∏≤‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏•‡∏ï‡πÄ‡∏à‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!mainTemplate || !categoryTemplate || !cardTemplate) {
      const missing = [
        !mainTemplate ? '#home-main-template' : null,
        !categoryTemplate ? '#home-category-template' : null,
        !cardTemplate ? '#home-item-card-template' : null
      ].filter(Boolean).join(', ');
      throw new Error(`‡∏´‡∏≤‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏•‡∏ï‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ID: ${missing} ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå home-templates.html`);
    }
    console.log("‚úÖ ‡∏û‡∏ö‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏•‡∏ï‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î");
    
    console.log("4. ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö...");
    renderHomePage(data, { mainTemplate, categoryTemplate, cardTemplate });
    console.log("üéâ ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå!");
    
  } catch (error) {
    console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡πâ‡∏≤‡∏¢‡πÅ‡∏£‡∏á‡πÉ‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô initializeHomepage:", error);
    app.innerHTML = `<p style="color:red; font-family: monospace;">${getLoadDataErrorMessage(error.message)}</p>`;
  }
}

function renderHomePage(database, templates) {
  const app = document.getElementById('app');
  app.innerHTML = '';
  
  if (!database.type || !Array.isArray(database.type)) {
    throw new Error("‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• JSON ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: ‡πÑ‡∏°‡πà‡∏û‡∏ö 'database.type'");
  }
  
  const { mainTemplate, categoryTemplate, cardTemplate } = templates;
  const userLang = localStorage.getItem('selectedLang') || 'en';
  const langList = [userLang, 'en'];
  
  database.type.forEach(typeObj => {
    // --- ‡πÉ‡∏ä‡πâ typeId (ID ‡∏Ç‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏•‡∏∞ viewAll ---
    const typeId = typeObj.id; // ‡πÄ‡∏ä‡πà‡∏ô "emoji", "special-characters"
    const typeName = pickLang(typeObj.name, langList) || typeId;
    const categories = (typeObj.category || []).slice(0, 4);
    
    const mainClone = mainTemplate.content.cloneNode(true);
    const categoriesContainer = mainClone.querySelector('[data-ref="categories-container"]');
    
    mainClone.querySelector('[data-ref="type-name"]').textContent = typeName;
    const viewAllBtn = mainClone.querySelector('[data-ref="view-all-btn"]');
    viewAllBtn.textContent = getViewAllLabel(typeId);
    viewAllBtn.onclick = () => { window.location.href = getViewAllUrl(typeId); };
    
    categories.forEach(category => {
      const categoryClone = categoryTemplate.content.cloneNode(true);
      const track = categoryClone.querySelector('[data-ref="track"]');
      categoryClone.querySelector('[data-ref="category-name"]').textContent = pickLang(category.name, langList) || '';
      
      (category.data || []).forEach(item => {
        const cardClone = cardTemplate.content.cloneNode(true);
        const card = cardClone.querySelector('.item-card');
        const itemName = pickLang(item.name, langList) || item.api || '';
        
        cardClone.querySelector('[data-ref="item-text"]').textContent = item.text || '';
        cardClone.querySelector('[data-ref="item-name"]').textContent = itemName;
        
        card.title = `‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å ${itemName}`;
        card.onclick = async () => {
          if (await copyToClipboard(item.text || '')) {
            if (typeof window.showCopyNotification === 'function') {
              // ‡πÉ‡∏ä‡πâ typeId ‡πÄ‡∏™‡∏°‡∏≠ (‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà)
              window.showCopyNotification({
                text: item.text,
                name: itemName,
                typeId: typeId, // <-- ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å: ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏∞‡πÉ‡∏ä‡πâ typeId
                lang: userLang
              });
            }
          }
        };
        track.appendChild(cardClone);
      });
      categoriesContainer.appendChild(categoryClone);
    });
    app.appendChild(mainClone);
  });
}

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
initializeHomepage();